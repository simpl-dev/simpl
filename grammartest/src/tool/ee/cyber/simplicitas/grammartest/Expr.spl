grammar ee.cyber.simplicitas.grammartest.expr.Expr;

options (backtrack=true;)

option Expr: Plus | Minus;

Plus: a=Mul ("+" b=Mul)*;
Minus: a=Mul ("-" b=Mul)*;

option Mul: Times | Divide;

Times: a=Prim ("*" b=Prim)*;
Divide: a=Prim ("/" b=Prim)*;

option Prim: Paren | Id;

wrapper Paren: "(" Expr ")";

// Just to create a keyword.
// Foo: "foo";

terminal Id: ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
fragment ML_COMMENT: '/*' (~'*' | '*' ~'/')* '*/';
fragment SL_COMMENT: '//' ~('\n'|'\r')*;
hidden terminal WS: (' '|'\t'|'\r'|'\n'|SL_COMMENT|ML_COMMENT)+;
